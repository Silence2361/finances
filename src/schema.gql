# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type LoginResponseDto {
  accessToken: String!
}

type RegisterResponseDto {
  id: Int!
  email: String!
  role: String!
}

type UserByIdResponseDto {
  id: Int!
  email: String!
  role: String!
}

type UserCreateResponseDto {
  id: Int!
}

type UserDto {
  id: Int!
  email: String!
  role: String!
}

type UsersListResponseDto {
  docs: [UserDto!]!
  count: Int!
}

type CategoryByIdResponseDto {
  id: Int!
  name: String!
}

type CreateCategoryResponseDto {
  id: Int!
}

type CategoryDto {
  id: Int!
  name: String!
}

type CategoriesListResponseDto {
  docs: [CategoryDto!]!
  count: Int!
}

type CreateFinanceResponseDto {
  id: Int!
}

type StatisticsResponseDto {
  type: FinanceType!
  categoryId: Int!
  totalAmount: Int!
}

"""The type of the finance record"""
enum FinanceType {
  INCOME
  EXPENSE
}

type FinanceDetailsDto {
  id: Int!
  amount: Int!
  date: String!
  description: String
  categoryId: Int!
  userId: Int!
  type: FinanceType!
}

type GetFinancesListResponseDto {
  docs: [FinanceDetailsDto!]!
  count: Int!
}

type Query {
  findAll(
    """The number of the page to return"""
    page: Int

    """The number of items per page"""
    pageSize: Int
  ): UsersListResponseDto!
  findUserById(id: Int!): UserByIdResponseDto
  findAllCategories(
    """The number of the page to return"""
    page: Int

    """The number of items per page"""
    pageSize: Int
  ): CategoriesListResponseDto!
  findCategoryById(id: Int!): CategoryByIdResponseDto
  findFinances(
    """The number of the page to return"""
    page: Int

    """The number of items per page"""
    pageSize: Int
  ): GetFinancesListResponseDto!
  findCategoryStatistics: [StatisticsResponseDto!]!
  findTotalStatistics: [StatisticsResponseDto!]!
  findMonthlyStatistics(month: Int!, year: Int!): [StatisticsResponseDto!]!
}

type Mutation {
  register(authData: AuthDto!): RegisterResponseDto!
  login(authData: LoginDto!): LoginResponseDto!
  createUser(createUserDto: CreateUserDto!): UserCreateResponseDto!
  updateUserById(id: Int!, updateUserDto: UpdateUserDto!): Boolean!
  deleteUserById(id: Int!): Boolean!
  createCategory(createCategoryDto: CreateCategoryDto!): CreateCategoryResponseDto!
  updateCategoryById(id: Int!, updateCategoryDto: UpdateCategoryDto!): Boolean!
  deleteCategory(id: Int!): Boolean!
  createFinance(createFinanceDto: CreateFinanceDto!): CreateFinanceResponseDto!
  updateFinanceById(id: Int!, updateFinanceDto: UpdateFinanceDto!): Boolean!
  deleteFinanceById(id: Int!): Boolean!
}

input AuthDto {
  email: String!
  password: String!
  role: String!
}

input LoginDto {
  email: String!
  password: String!
}

input CreateUserDto {
  email: String!
  password: String!
  role: String!
}

input UpdateUserDto {
  email: String
  password: String
  role: String
}

input CreateCategoryDto {
  name: String!
}

input UpdateCategoryDto {
  name: String
}

input CreateFinanceDto {
  amount: Int!
  date: String!
  description: String
  categoryId: Int!
  type: FinanceType!
}

input UpdateFinanceDto {
  amount: Int
  date: String
  description: String
  categoryId: Int
  type: FinanceType
}